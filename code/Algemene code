#sets vinden
import random

def vind_sets(kaarten):
    sets = []
    for i in range(len(kaarten)):
        for j in range(i+1, len(kaarten)):
            for k in range(j+1, len(kaarten)):
                if (kaarten[i][0] == kaarten[j][0] == kaarten[k][0] or kaarten[i][0] != kaarten[j][0] != kaarten[k][0] != kaarten[i][0]) and (kaarten[i][1] == kaarten[j][1] == kaarten[k][1] or kaarten[i][1] != kaarten[j][1] != kaarten[k][1] != kaarten[i][1]) and (kaarten[i][2] == kaarten[j][2] == kaarten[k][2] or kaarten[i][2] != kaarten[j][2] != kaarten[k][2] != kaarten[i][2]) and (kaarten[i][3] == kaarten[j][3] == kaarten[k][3] or kaarten[i][3] != kaarten[j][3] != kaarten[k][3] != kaarten[i][3]):
                    sets.append([kaarten[i], kaarten[j], kaarten[k]])
    return random.choice(sets)

#controleer sets
def controleer_sets(kaarten):
    for i in range(len(kaarten)):
        for j in range(i+1, len(kaarten)):
            for k in range(j+1, len(kaarten)):
                if (kaarten[i][0] == kaarten[j][0] == kaarten[k][0] or kaarten[i][0] != kaarten[j][0] != kaarten[k][0] != kaarten[i][0]) and (kaarten[i][1] == kaarten[j][1] == kaarten[k][1] or kaarten[i][1] != kaarten[j][1] != kaarten[k][1] != kaarten[i][1]) and (kaarten[i][2] == kaarten[j][2] == kaarten[k][2] or kaarten[i][2] != kaarten[j][2] != kaarten[k][2] != kaarten[i][2]) and (kaarten[i][3] == kaarten[j][3] == kaarten[k][3] or kaarten[i][3] != kaarten[j][3] != kaarten[k][3] != kaarten[i][3]):
                	print('True')
                else:
                	print('False')

#controleer 3 kaarten
def controleer_set(kaarten):
	if ((kaarten[0][0] == kaarten[1][0] == kaarten[2][0]) or (kaarten[0][0] != kaarten[1][0] != kaarten[2][0] != kaarten[0][0])) and ((kaarten[0][1] == kaarten[1][1] == kaarten[2][1]) or (kaarten[0][1] != kaarten[1][1] != kaarten[2][1] != kaarten[0][1])) and ((kaarten[0][2] == kaarten[1][2] == kaarten[2][2]) or (kaarten[0][2] != kaarten[1][2] != kaarten[2][2] != kaarten[0][2])) and ((kaarten[0][3] == kaarten[1][3] == kaarten[2][3]) or (kaarten[0][3] != kaarten[1][3] != kaarten[2][3] != kaarten[0][3])): 
		return True
	else:
		return False

# hoi
sets = []
def vind_sets(kaarten_display):
    for i in range(len(kaarten_display)):
        for j in range(i+1, len(kaarten_display)):
            for k in range(j+1, len(kaarten_display)):
                if (kaarten_display[i][0] == kaarten_display[j][0] == kaarten_display[k][0] or kaarten_display[i][0] != kaarten_display[j][0] != kaarten_display[k][0] != kaarten_display[i][0]) and (kaarten_display[i][1] == kaarten_display[j][1] == kaarten_display[k][1] or kaarten_display[i][1] != kaarten_display[j][1] != kaarten_display[k][1] != kaarten_display[i][1]) and (kaarten_display[i][2] == kaarten_display[j][2] == kaarten_display[k][2] or kaarten_display[i][2] != kaarten_display[j][2] != kaarten_display[k][2] != kaarten_display[i][2]) and (kaarten_display[i][3] == kaarten_display[j][3] == kaarten_display[k][3] or kaarten_display[i][3] != kaarten_display[j][3] != kaarten_display[k][3] != kaarten_display[i][3]):
                    sets.append([kaarten_display[i], kaarten_display[j], kaarten_display[k]])

    if len(sets) == 0:
		for i in range(0, 3):
        	kaart = pygame.image.load(''.join(kaarten[i])+".gif").convert()
        	kaarten_display.append(kaart)
        	display.blit(kaarten_display[i], (10 + 110*(i), 20))
        	pygame.display.flip() 
    elif len(sets) > 0
    	definitieve_set = random.choice(sets)
