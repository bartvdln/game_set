import pygame


(width, height) = (1500, 240)
background = (160, 200, 150)

kleur = ["g", "r", "p"]
vorm = ["g", "o", "r"]
vulling = ["v", "g", "l"]
aantal = ["1", "2", "3"]

kaarten = []

for i in range(0, 3):
    for j in range(0, 3):
        for k in range(0, 3):
            for l in range(0, 3):
                kaarten.append(kleur[i] + vorm[j] + vulling[k] + aantal[l])
return kaarten 

display = pygame.display.set_mode((width, height))
display.fill(background)
pygame.display.set_caption('Sets')
pygame.display.flip()

kaart = pygame.image.load(r"C:\Users\Berkhof\OneDrive - HvA\Documents\UU wis 1ste jaar\Sets Programmeren\Kaarten\ggg1.gif").convert()
display.blit(kaart, (10, 20))
pygame.display.flip()



from sys import exit
while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                exit()
                

#sets vinden
import random

def vind_sets(kaarten):
    sets = []
    for i in range(len(kaarten)):
        for j in range(i+1, len(kaarten)):
            for k in range(j+1, len(kaarten)):
                if (kaarten[i][0] == kaarten[j][0] == kaarten[k][0] or kaarten[i][0] != kaarten[j][0] != kaarten[k][0] != kaarten[i][0]) and (kaarten[i][1] == kaarten[j][1] == kaarten[k][1] or kaarten[i][1] != kaarten[j][1] != kaarten[k][1] != kaarten[i][1]) and (kaarten[i][2] == kaarten[j][2] == kaarten[k][2] or kaarten[i][2] != kaarten[j][2] != kaarten[k][2] != kaarten[i][2]) and (kaarten[i][3] == kaarten[j][3] == kaarten[k][3] or kaarten[i][3] != kaarten[j][3] != kaarten[k][3] != kaarten[i][3]):
                    sets.append([kaarten[i], kaarten[j], kaarten[k]])
    return random.choice(sets)
    
#controleer sets
def controleer_sets(kaarten):
    for i in range(len(kaarten)):
        for j in range(i+1, len(kaarten)):
            for k in range(j+1, len(kaarten)):
                if (kaarten[i][0] == kaarten[j][0] == kaarten[k][0] or kaarten[i][0] != kaarten[j][0] != kaarten[k][0] != kaarten[i][0]) and (kaarten[i][1] == kaarten[j][1] == kaarten[k][1] or kaarten[i][1] != kaarten[j][1] != kaarten[k][1] != kaarten[i][1]) and (kaarten[i][2] == kaarten[j][2] == kaarten[k][2] or kaarten[i][2] != kaarten[j][2] != kaarten[k][2] != kaarten[i][2]) and (kaarten[i][3] == kaarten[j][3] == kaarten[k][3] or kaarten[i][3] != kaarten[j][3] != kaarten[k][3] != kaarten[i][3]):
                	print('True')
                else:
                	print('False')
                    
#controleer 3 kaarten
def controleer_set(kaarten):
	if ((kaarten[0][0] == kaarten[1][0] == kaarten[2][0]) or (kaarten[0][0] != kaarten[1][0] != kaarten[2][0] != kaarten[0][0])) and ((kaarten[0][1] == kaarten[1][1] == kaarten[2][1]) or (kaarten[0][1] != kaarten[1][1] != kaarten[2][1] != kaarten[0][1])) and ((kaarten[0][2] == kaarten[1][2] == kaarten[2][2]) or (kaarten[0][2] != kaarten[1][2] != kaarten[2][2] != kaarten[0][2])) and ((kaarten[0][3] == kaarten[1][3] == kaarten[2][3]) or (kaarten[0][3] != kaarten[1][3] != kaarten[2][3] != kaarten[0][3])): 
		return True
	else:
		return False

print(controleer_set(['ggg2', 'gog1', 'grg2']))
    
    
   
        
        
            
